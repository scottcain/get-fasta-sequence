"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bgzf_filehandle_1 = require("@gmod/bgzf-filehandle");
var indexedFasta_1 = __importDefault(require("./indexedFasta"));
var BgzipIndexedFasta = /** @class */ (function (_super) {
    __extends(BgzipIndexedFasta, _super);
    function BgzipIndexedFasta(_a) {
        var fasta = _a.fasta, path = _a.path, fai = _a.fai, faiPath = _a.faiPath, gzi = _a.gzi, gziPath = _a.gziPath, chunkSizeLimit = _a.chunkSizeLimit;
        var _this = _super.call(this, { fasta: fasta, path: path, fai: fai, faiPath: faiPath, chunkSizeLimit: chunkSizeLimit }) || this;
        if (fasta && gzi) {
            _this.fasta = new bgzf_filehandle_1.BgzfFilehandle({
                filehandle: fasta,
                gziFilehandle: gzi,
            });
        }
        else if (path && gziPath) {
            _this.fasta = new bgzf_filehandle_1.BgzfFilehandle({ path: path, gziPath: gziPath });
        }
        return _this;
    }
    return BgzipIndexedFasta;
}(indexedFasta_1.default));
exports.default = BgzipIndexedFasta;
//# sourceMappingURL=bgzipIndexedFasta.js.map